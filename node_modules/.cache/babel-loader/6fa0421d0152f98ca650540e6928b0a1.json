{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKS\\\\projet-js\\\\zc_react\\\\src\\\\components\\\\SearchLocationInput.js\";\nimport React from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nexport default function SearchLocationInput({\n  state,\n  updateState\n}) {\n  console.log(state);\n  const [address, setAddress] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n    value: address,\n    onChange: setAddress,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"formGroupExampleInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Lieux de prise en charge\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    class: \"form-control\",\n    id: \"formGroupExampleInput\"\n  }, getInputProps({\n    placeholder: \"Saisir une adresse\"\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-success  mt-4\",\n    onClick: () => updateState({\n      lat: coordinates.lat,\n      lng: coordinates.lng\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Rechercher\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }\n  }, \"...loading\") : null, suggestions.map(suggestion => {\n    const style = {\n      backgroundColor: suggestion.active ? \"#32B298\" : \"#fff\",\n      color: \"#252525\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n      style\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }), suggestion.description);\n  })))));\n}","map":{"version":3,"sources":["D:/WORKS/projet-js/zc_react/src/components/SearchLocationInput.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","SearchLocationInput","state","updateState","console","log","address","setAddress","useState","coordinates","setCoordinates","lat","lng","handleSelect","value","results","latLng","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","color","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nexport default function SearchLocationInput({ state, updateState }) {\r\n  console.log(state);\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n  const handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PlacesAutocomplete\r\n        value={address}\r\n        onChange={setAddress}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <div class=\"row justify-content-center m-4\">\r\n              <div class=\"col-4\">\r\n                <label for=\"formGroupExampleInput\">\r\n                  Lieux de prise en charge\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"formGroupExampleInput\"\r\n                  {...getInputProps({ placeholder: \"Saisir une adresse\" })}\r\n                />\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <button\r\n                  class=\"btn btn-success  mt-4\"\r\n                  onClick={() =>\r\n                    updateState({\r\n                      lat: coordinates.lat,\r\n                      lng: coordinates.lng,\r\n                    })\r\n                  }\r\n                >\r\n                  Rechercher\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              {loading ? <div>...loading</div> : null}\r\n\r\n              {suggestions.map((suggestion) => {\r\n                const style = {\r\n                  backgroundColor: suggestion.active ? \"#32B298\" : \"#fff\",\r\n                  color: \"#252525\",\r\n                };\r\n\r\n                return (\r\n                  <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                    {suggestion.description}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}